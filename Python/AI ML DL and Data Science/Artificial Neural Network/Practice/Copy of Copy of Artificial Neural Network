{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Copy of Artificial Neural Network","provenance":[{"file_id":"1eje9zILprgVmohMN7cKykI3fn4FBRPnF","timestamp":1595027299566}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"3cbb7fRy-eyr"},"source":["# Artificial Neural Network"]},{"cell_type":"markdown","metadata":{"id":"8sNDnxE2-pwE"},"source":["### Importing the libraries"]},{"cell_type":"code","metadata":{"id":"JbmwjeuNWbdF"},"source":["import pandas as pd\r\n","import tensorflow as tf\r\n","import numpy as np"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"AG3FQEch-yuA"},"source":["## Part 1 - Data Preprocessing"]},{"cell_type":"markdown","metadata":{"id":"-4zq8Mza_D9O"},"source":["### Importing the dataset"]},{"cell_type":"code","metadata":{"id":"hOVkALAzWjHh"},"source":["dataset = pd.read_excel(\"Folds5x2_pp.xlsx\")\r\n","X = dataset.iloc[:, :-1].values\r\n","y = dataset.iloc[: , -1].values"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VC6omXel_Up0"},"source":["### Splitting the dataset into the Training set and Test set"]},{"cell_type":"code","metadata":{"id":"uB64YGo8XJb1"},"source":["from sklearn.model_selection import train_test_split\r\n","\r\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)\r\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5OPo3Q6EXXun"},"source":["## Feature Scaling"]},{"cell_type":"code","metadata":{"id":"80-u69PMXaqM"},"source":["from sklearn.preprocessing import StandardScaler\r\n","\r\n","sc = StandardScaler()\r\n","X_train = sc.fit_transform(X_train)\r\n","X_test = sc.transform(X_test)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_mSLlAT9_eyI"},"source":["## Part 2 - Building the ANN"]},{"cell_type":"markdown","metadata":{"id":"CsBULd_f_wLY"},"source":["### Initializing the ANN"]},{"cell_type":"code","metadata":{"id":"ppW-Xd1OXt2B"},"source":["ann = tf.keras.models.Sequential()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"iitAFJS_ABUn"},"source":["### Adding the input layer and the first hidden layer"]},{"cell_type":"code","metadata":{"id":"FIkjaOtGX3Bu"},"source":["ann.add(tf.keras.layers.Dense(units = 4, activation = 'relu'))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-lb4kK_wAKbs"},"source":["### Adding the second hidden layer"]},{"cell_type":"code","metadata":{"id":"yzWnRbpKYEov"},"source":["ann.add(tf.keras.layers.Dense(units = 10, activation = 'relu'))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jwMOmKb3AdBY"},"source":["### Adding the output layer"]},{"cell_type":"code","metadata":{"id":"7GErNHv_YHbD"},"source":["ann.add(tf.keras.layers.Dense(units = 1, activation = 'relu'))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"fq7e4fF6A1yy"},"source":["## Part 3 - Training the ANN"]},{"cell_type":"markdown","metadata":{"id":"qDeylAs2An25"},"source":["### Compiling the ANN"]},{"cell_type":"code","metadata":{"id":"-fasCkCbYZ76"},"source":["ann.compile(optimizer = 'adam', loss = 'mean_squared_error')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"YjVuiybYOo7r"},"source":["### Training the ANN model on the Training set"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cz7oBCL5YvlF","executionInfo":{"status":"ok","timestamp":1609159789017,"user_tz":-240,"elapsed":28172,"user":{"displayName":"mahmoud kharoof","photoUrl":"https://lh6.googleusercontent.com/-oJjhO6LTv0k/AAAAAAAAAAI/AAAAAAAAPxA/3js0ERV5mco/s64/photo.jpg","userId":"04175753233013773418"}},"outputId":"2c2112be-b37a-496f-e714-375b708b8030"},"source":["ann.fit(X_train, y_train, batch_size=32, epochs = 100)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/100\n","240/240 [==============================] - 1s 947us/step - loss: 205644.1152\n","Epoch 2/100\n","240/240 [==============================] - 0s 945us/step - loss: 195532.2817\n","Epoch 3/100\n","240/240 [==============================] - 0s 978us/step - loss: 163399.6072\n","Epoch 4/100\n","240/240 [==============================] - 0s 1ms/step - loss: 123510.5148\n","Epoch 5/100\n","240/240 [==============================] - 0s 973us/step - loss: 107954.5963\n","Epoch 6/100\n","240/240 [==============================] - 0s 905us/step - loss: 96515.4040\n","Epoch 7/100\n","240/240 [==============================] - 0s 904us/step - loss: 77583.2691\n","Epoch 8/100\n","240/240 [==============================] - 0s 841us/step - loss: 44352.8159\n","Epoch 9/100\n","240/240 [==============================] - 0s 959us/step - loss: 11160.8507\n","Epoch 10/100\n","240/240 [==============================] - 0s 906us/step - loss: 2466.0482\n","Epoch 11/100\n","240/240 [==============================] - 0s 914us/step - loss: 1266.0461\n","Epoch 12/100\n","240/240 [==============================] - 0s 1ms/step - loss: 943.2811\n","Epoch 13/100\n","240/240 [==============================] - 0s 988us/step - loss: 732.4823\n","Epoch 14/100\n","240/240 [==============================] - 0s 901us/step - loss: 598.4580\n","Epoch 15/100\n","240/240 [==============================] - 0s 962us/step - loss: 488.5090\n","Epoch 16/100\n","240/240 [==============================] - 0s 920us/step - loss: 354.3174\n","Epoch 17/100\n","240/240 [==============================] - 0s 916us/step - loss: 290.8973\n","Epoch 18/100\n","240/240 [==============================] - 0s 1ms/step - loss: 220.6673\n","Epoch 19/100\n","240/240 [==============================] - 0s 914us/step - loss: 194.0038\n","Epoch 20/100\n","240/240 [==============================] - 0s 852us/step - loss: 139.8602\n","Epoch 21/100\n","240/240 [==============================] - 0s 898us/step - loss: 133.0782\n","Epoch 22/100\n","240/240 [==============================] - 0s 915us/step - loss: 107.8308\n","Epoch 23/100\n","240/240 [==============================] - 0s 924us/step - loss: 83.1801\n","Epoch 24/100\n","240/240 [==============================] - 0s 873us/step - loss: 72.2560\n","Epoch 25/100\n","240/240 [==============================] - 0s 885us/step - loss: 62.0285\n","Epoch 26/100\n","240/240 [==============================] - 0s 1ms/step - loss: 52.7821\n","Epoch 27/100\n","240/240 [==============================] - 0s 979us/step - loss: 43.7452\n","Epoch 28/100\n","240/240 [==============================] - 0s 879us/step - loss: 41.3961\n","Epoch 29/100\n","240/240 [==============================] - 0s 839us/step - loss: 40.1178\n","Epoch 30/100\n","240/240 [==============================] - 0s 925us/step - loss: 33.2772\n","Epoch 31/100\n","240/240 [==============================] - 0s 919us/step - loss: 32.8653\n","Epoch 32/100\n","240/240 [==============================] - 0s 949us/step - loss: 27.8172\n","Epoch 33/100\n","240/240 [==============================] - 0s 917us/step - loss: 26.5949\n","Epoch 34/100\n","240/240 [==============================] - 0s 879us/step - loss: 25.6786\n","Epoch 35/100\n","240/240 [==============================] - 0s 955us/step - loss: 24.6728\n","Epoch 36/100\n","240/240 [==============================] - 0s 897us/step - loss: 22.7677\n","Epoch 37/100\n","240/240 [==============================] - 0s 885us/step - loss: 23.3882\n","Epoch 38/100\n","240/240 [==============================] - 0s 929us/step - loss: 23.6830\n","Epoch 39/100\n","240/240 [==============================] - 0s 972us/step - loss: 22.7184\n","Epoch 40/100\n","240/240 [==============================] - 0s 953us/step - loss: 21.4960\n","Epoch 41/100\n","240/240 [==============================] - 0s 928us/step - loss: 21.9451\n","Epoch 42/100\n","240/240 [==============================] - 0s 943us/step - loss: 22.3960\n","Epoch 43/100\n","240/240 [==============================] - 0s 932us/step - loss: 22.1527\n","Epoch 44/100\n","240/240 [==============================] - 0s 975us/step - loss: 22.1923\n","Epoch 45/100\n","240/240 [==============================] - 0s 997us/step - loss: 21.0868\n","Epoch 46/100\n","240/240 [==============================] - 0s 898us/step - loss: 22.3323\n","Epoch 47/100\n","240/240 [==============================] - 0s 950us/step - loss: 21.9940\n","Epoch 48/100\n","240/240 [==============================] - 0s 899us/step - loss: 20.7276\n","Epoch 49/100\n","240/240 [==============================] - 0s 951us/step - loss: 21.2922\n","Epoch 50/100\n","240/240 [==============================] - 0s 915us/step - loss: 22.0622\n","Epoch 51/100\n","240/240 [==============================] - 0s 867us/step - loss: 21.6233\n","Epoch 52/100\n","240/240 [==============================] - 0s 914us/step - loss: 21.7994\n","Epoch 53/100\n","240/240 [==============================] - 0s 867us/step - loss: 21.1140\n","Epoch 54/100\n","240/240 [==============================] - 0s 943us/step - loss: 22.2349\n","Epoch 55/100\n","240/240 [==============================] - 0s 883us/step - loss: 22.0101\n","Epoch 56/100\n","240/240 [==============================] - 0s 897us/step - loss: 21.0478\n","Epoch 57/100\n","240/240 [==============================] - 0s 899us/step - loss: 22.0597\n","Epoch 58/100\n","240/240 [==============================] - 0s 990us/step - loss: 23.1711\n","Epoch 59/100\n","240/240 [==============================] - 0s 903us/step - loss: 21.7156\n","Epoch 60/100\n","240/240 [==============================] - 0s 909us/step - loss: 22.0354\n","Epoch 61/100\n","240/240 [==============================] - 0s 947us/step - loss: 21.0918\n","Epoch 62/100\n","240/240 [==============================] - 0s 874us/step - loss: 20.7749\n","Epoch 63/100\n","240/240 [==============================] - 0s 960us/step - loss: 21.0375\n","Epoch 64/100\n","240/240 [==============================] - 0s 870us/step - loss: 20.8290\n","Epoch 65/100\n","240/240 [==============================] - 0s 893us/step - loss: 20.8769\n","Epoch 66/100\n","240/240 [==============================] - 0s 952us/step - loss: 22.8990\n","Epoch 67/100\n","240/240 [==============================] - 0s 929us/step - loss: 21.2782\n","Epoch 68/100\n","240/240 [==============================] - 0s 858us/step - loss: 20.4196\n","Epoch 69/100\n","240/240 [==============================] - 0s 914us/step - loss: 21.8852\n","Epoch 70/100\n","240/240 [==============================] - 0s 903us/step - loss: 20.8456\n","Epoch 71/100\n","240/240 [==============================] - 0s 964us/step - loss: 21.5118\n","Epoch 72/100\n","240/240 [==============================] - 0s 1ms/step - loss: 21.3189\n","Epoch 73/100\n","240/240 [==============================] - 0s 931us/step - loss: 21.1125\n","Epoch 74/100\n","240/240 [==============================] - 0s 922us/step - loss: 21.4491\n","Epoch 75/100\n","240/240 [==============================] - 0s 913us/step - loss: 21.3152\n","Epoch 76/100\n","240/240 [==============================] - 0s 961us/step - loss: 21.1965\n","Epoch 77/100\n","240/240 [==============================] - 0s 937us/step - loss: 21.2341\n","Epoch 78/100\n","240/240 [==============================] - 0s 891us/step - loss: 21.3821\n","Epoch 79/100\n","240/240 [==============================] - 0s 929us/step - loss: 21.7024\n","Epoch 80/100\n","240/240 [==============================] - 0s 936us/step - loss: 22.0409\n","Epoch 81/100\n","240/240 [==============================] - 0s 1ms/step - loss: 20.9229\n","Epoch 82/100\n","240/240 [==============================] - 0s 900us/step - loss: 21.5942\n","Epoch 83/100\n","240/240 [==============================] - 0s 937us/step - loss: 22.1187\n","Epoch 84/100\n","240/240 [==============================] - 0s 945us/step - loss: 21.5731\n","Epoch 85/100\n","240/240 [==============================] - 0s 1ms/step - loss: 21.8793\n","Epoch 86/100\n","240/240 [==============================] - 0s 923us/step - loss: 22.5119\n","Epoch 87/100\n","240/240 [==============================] - 0s 936us/step - loss: 22.6189\n","Epoch 88/100\n","240/240 [==============================] - 0s 1ms/step - loss: 21.9801\n","Epoch 89/100\n","240/240 [==============================] - 0s 1ms/step - loss: 21.1606\n","Epoch 90/100\n","240/240 [==============================] - 0s 941us/step - loss: 21.8620\n","Epoch 91/100\n","240/240 [==============================] - 0s 900us/step - loss: 21.5370\n","Epoch 92/100\n","240/240 [==============================] - 0s 905us/step - loss: 20.7215\n","Epoch 93/100\n","240/240 [==============================] - 0s 959us/step - loss: 21.6367\n","Epoch 94/100\n","240/240 [==============================] - 0s 932us/step - loss: 21.3344\n","Epoch 95/100\n","240/240 [==============================] - 0s 937us/step - loss: 20.8722\n","Epoch 96/100\n","240/240 [==============================] - 0s 917us/step - loss: 20.7699\n","Epoch 97/100\n","240/240 [==============================] - 0s 969us/step - loss: 21.5814\n","Epoch 98/100\n","240/240 [==============================] - 0s 964us/step - loss: 21.1694\n","Epoch 99/100\n","240/240 [==============================] - 0s 952us/step - loss: 22.0126\n","Epoch 100/100\n","240/240 [==============================] - 0s 975us/step - loss: 22.7407\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7f48f96eb470>"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"0H0zKKNEBLD5"},"source":["### Predicting the results of the Test set"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Azv5RW6xYyp-","executionInfo":{"status":"ok","timestamp":1609159789367,"user_tz":-240,"elapsed":28519,"user":{"displayName":"mahmoud kharoof","photoUrl":"https://lh6.googleusercontent.com/-oJjhO6LTv0k/AAAAAAAAAAI/AAAAAAAAPxA/3js0ERV5mco/s64/photo.jpg","userId":"04175753233013773418"}},"outputId":"8f73cffb-c848-443e-d112-e0b7f0579292"},"source":["y_pred = ann.predict(X_test)\r\n","print(np.concatenate((y_pred.reshape(len(y_pred), 1), y_test.reshape(len(y_test), 1)), 1))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[[430.52359009 431.23      ]\n"," [457.78198242 460.01      ]\n"," [462.44622803 461.14      ]\n"," ...\n"," [468.79437256 473.26      ]\n"," [442.82849121 438.        ]\n"," [462.46966553 463.28      ]]\n"],"name":"stdout"}]}]}
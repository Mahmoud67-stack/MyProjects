{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Artificial Neural Network","provenance":[{"file_id":"1eje9zILprgVmohMN7cKykI3fn4FBRPnF","timestamp":1595027299566}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"3cbb7fRy-eyr"},"source":["# Artificial Neural Network"]},{"cell_type":"markdown","metadata":{"id":"8sNDnxE2-pwE"},"source":["### Importing the libraries"]},{"cell_type":"code","metadata":{"id":"m8eeSEw9CauQ"},"source":["import numpy as np\n","import pandas as pd\n","import tensorflow as tf"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"YJslRLVTCgxW","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1595029879402,"user_tz":-240,"elapsed":2356,"user":{"displayName":"mahmoud kharoof","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggx1JGdWwdkYuAeerh_1bne3eE6XiWE4UkckTU3IQ=s64","userId":"04175753233013773418"}},"outputId":"170f7978-8d49-4182-94f9-33e7e8bf0b90"},"source":["tf.__version__"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic":{"type":"string"},"text/plain":["'2.2.0'"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"markdown","metadata":{"id":"AG3FQEch-yuA"},"source":["## Part 1 - Data Preprocessing"]},{"cell_type":"markdown","metadata":{"id":"-4zq8Mza_D9O"},"source":["### Importing the dataset"]},{"cell_type":"code","metadata":{"id":"meT0t8klC6Ce"},"source":["dataset = pd.read_excel('Folds5x2_pp.xlsx')\n","X = dataset.iloc[: , :-1].values\n","y = dataset.iloc[: , -1].values"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VC6omXel_Up0"},"source":["### Splitting the dataset into the Training set and Test set"]},{"cell_type":"code","metadata":{"id":"U8fc40xsDvyu"},"source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_mSLlAT9_eyI"},"source":["## Part 2 - Building the ANN"]},{"cell_type":"markdown","metadata":{"id":"CsBULd_f_wLY"},"source":["### Initializing the ANN"]},{"cell_type":"code","metadata":{"id":"pTfO9tuEEDpF"},"source":["ann = tf.keras.models.Sequential()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"iitAFJS_ABUn"},"source":["### Adding the input layer and the first hidden layer"]},{"cell_type":"code","metadata":{"id":"D4LRUsIXFQ5a"},"source":["ann.add(tf.keras.layers.Dense(units = 4, activation = 'relu'))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-lb4kK_wAKbs"},"source":["### Adding the second hidden layer"]},{"cell_type":"code","metadata":{"id":"OnIzxE8xGeXy"},"source":["ann.add(tf.keras.layers.Dense(units = 6, activation = 'relu'))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jwMOmKb3AdBY"},"source":["### Adding the output layer"]},{"cell_type":"code","metadata":{"id":"gbUVxfh6GhH-"},"source":["ann.add(tf.keras.layers.Dense(units = 1))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Us0AapwwB-aT"},"source":[""]},{"cell_type":"markdown","metadata":{"id":"fq7e4fF6A1yy"},"source":["## Part 3 - Training the ANN"]},{"cell_type":"markdown","metadata":{"id":"qDeylAs2An25"},"source":["### Compiling the ANN"]},{"cell_type":"code","metadata":{"id":"q5pdv9dfG8gX"},"source":["ann.compile(optimizer = 'adam', loss = 'mean_squared_error')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"YjVuiybYOo7r"},"source":["### Training the ANN model on the Training set"]},{"cell_type":"code","metadata":{"id":"3n6S8JGUJKNN","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1595029909806,"user_tz":-240,"elapsed":32688,"user":{"displayName":"mahmoud kharoof","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggx1JGdWwdkYuAeerh_1bne3eE6XiWE4UkckTU3IQ=s64","userId":"04175753233013773418"}},"outputId":"c40d6dd1-559f-431a-e7a0-cae3254a52d2"},"source":["ann.fit(X_train, y_train, batch_size = 32, epochs = 100)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/100\n","240/240 [==============================] - 0s 1ms/step - loss: 100700.7969\n","Epoch 2/100\n","240/240 [==============================] - 0s 1ms/step - loss: 1235.4058\n","Epoch 3/100\n","240/240 [==============================] - 0s 1ms/step - loss: 430.2706\n","Epoch 4/100\n","240/240 [==============================] - 0s 1ms/step - loss: 418.6713\n","Epoch 5/100\n","240/240 [==============================] - 0s 1ms/step - loss: 405.0255\n","Epoch 6/100\n","240/240 [==============================] - 0s 1ms/step - loss: 389.0702\n","Epoch 7/100\n","240/240 [==============================] - 0s 1ms/step - loss: 371.1933\n","Epoch 8/100\n","240/240 [==============================] - 0s 1ms/step - loss: 351.8031\n","Epoch 9/100\n","240/240 [==============================] - 0s 1ms/step - loss: 330.9555\n","Epoch 10/100\n","240/240 [==============================] - 0s 1ms/step - loss: 308.7249\n","Epoch 11/100\n","240/240 [==============================] - 0s 1ms/step - loss: 284.9938\n","Epoch 12/100\n","240/240 [==============================] - 0s 1ms/step - loss: 261.3349\n","Epoch 13/100\n","240/240 [==============================] - 0s 1ms/step - loss: 237.2981\n","Epoch 14/100\n","240/240 [==============================] - 0s 1ms/step - loss: 212.6896\n","Epoch 15/100\n","240/240 [==============================] - 0s 1ms/step - loss: 188.6646\n","Epoch 16/100\n","240/240 [==============================] - 0s 1ms/step - loss: 166.2839\n","Epoch 17/100\n","240/240 [==============================] - 0s 1ms/step - loss: 144.1150\n","Epoch 18/100\n","240/240 [==============================] - 0s 1ms/step - loss: 123.4547\n","Epoch 19/100\n","240/240 [==============================] - 0s 1ms/step - loss: 105.1418\n","Epoch 20/100\n","240/240 [==============================] - 0s 1ms/step - loss: 89.2245\n","Epoch 21/100\n","240/240 [==============================] - 0s 1ms/step - loss: 75.5653\n","Epoch 22/100\n","240/240 [==============================] - 0s 1ms/step - loss: 64.8446\n","Epoch 23/100\n","240/240 [==============================] - 0s 1ms/step - loss: 55.9713\n","Epoch 24/100\n","240/240 [==============================] - 0s 1ms/step - loss: 49.5261\n","Epoch 25/100\n","240/240 [==============================] - 0s 1ms/step - loss: 44.6948\n","Epoch 26/100\n","240/240 [==============================] - 0s 1ms/step - loss: 40.8152\n","Epoch 27/100\n","240/240 [==============================] - 0s 1ms/step - loss: 38.6226\n","Epoch 28/100\n","240/240 [==============================] - 0s 1ms/step - loss: 36.2989\n","Epoch 29/100\n","240/240 [==============================] - 0s 1ms/step - loss: 34.8382\n","Epoch 30/100\n","240/240 [==============================] - 0s 1ms/step - loss: 33.5423\n","Epoch 31/100\n","240/240 [==============================] - 0s 1ms/step - loss: 32.5976\n","Epoch 32/100\n","240/240 [==============================] - 0s 1ms/step - loss: 31.8950\n","Epoch 33/100\n","240/240 [==============================] - 0s 1ms/step - loss: 31.3643\n","Epoch 34/100\n","240/240 [==============================] - 0s 1ms/step - loss: 30.7892\n","Epoch 35/100\n","240/240 [==============================] - 0s 1ms/step - loss: 30.4583\n","Epoch 36/100\n","240/240 [==============================] - 0s 1ms/step - loss: 30.2141\n","Epoch 37/100\n","240/240 [==============================] - 0s 1ms/step - loss: 29.8842\n","Epoch 38/100\n","240/240 [==============================] - 0s 1ms/step - loss: 29.8580\n","Epoch 39/100\n","240/240 [==============================] - 0s 1ms/step - loss: 29.5847\n","Epoch 40/100\n","240/240 [==============================] - 0s 1ms/step - loss: 29.2056\n","Epoch 41/100\n","240/240 [==============================] - 0s 1ms/step - loss: 29.0081\n","Epoch 42/100\n","240/240 [==============================] - 0s 1ms/step - loss: 28.7236\n","Epoch 43/100\n","240/240 [==============================] - 0s 1ms/step - loss: 28.5893\n","Epoch 44/100\n","240/240 [==============================] - 0s 1ms/step - loss: 28.5524\n","Epoch 45/100\n","240/240 [==============================] - 0s 1ms/step - loss: 28.7308\n","Epoch 46/100\n","240/240 [==============================] - 0s 1ms/step - loss: 28.1031\n","Epoch 47/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.8423\n","Epoch 48/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.5895\n","Epoch 49/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.9130\n","Epoch 50/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.8180\n","Epoch 51/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.8655\n","Epoch 52/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.6217\n","Epoch 53/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.4885\n","Epoch 54/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.4508\n","Epoch 55/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.0568\n","Epoch 56/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.0230\n","Epoch 57/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.0599\n","Epoch 58/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.3534\n","Epoch 59/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.4967\n","Epoch 60/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.9677\n","Epoch 61/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.8783\n","Epoch 62/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.8178\n","Epoch 63/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.1077\n","Epoch 64/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.0129\n","Epoch 65/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.1079\n","Epoch 66/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.9091\n","Epoch 67/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.6621\n","Epoch 68/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.6709\n","Epoch 69/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.5692\n","Epoch 70/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.8910\n","Epoch 71/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.7066\n","Epoch 72/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.5272\n","Epoch 73/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.7946\n","Epoch 74/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.0421\n","Epoch 75/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.5523\n","Epoch 76/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.6571\n","Epoch 77/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.8916\n","Epoch 78/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.2285\n","Epoch 79/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.9084\n","Epoch 80/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.7767\n","Epoch 81/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.7081\n","Epoch 82/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.9480\n","Epoch 83/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.9460\n","Epoch 84/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.5373\n","Epoch 85/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.2477\n","Epoch 86/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.6185\n","Epoch 87/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.7807\n","Epoch 88/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.5140\n","Epoch 89/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.6073\n","Epoch 90/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.5438\n","Epoch 91/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.4678\n","Epoch 92/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.5183\n","Epoch 93/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.3544\n","Epoch 94/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.7303\n","Epoch 95/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.2976\n","Epoch 96/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.8739\n","Epoch 97/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.4959\n","Epoch 98/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.4335\n","Epoch 99/100\n","240/240 [==============================] - 0s 1ms/step - loss: 26.3067\n","Epoch 100/100\n","240/240 [==============================] - 0s 1ms/step - loss: 27.0220\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7fc05a2c80f0>"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"0H0zKKNEBLD5"},"source":["### Predicting the results of the Test set"]},{"cell_type":"code","metadata":{"id":"7JOG0zQMJi0J","colab":{"base_uri":"https://localhost:8080/","height":134},"executionInfo":{"status":"ok","timestamp":1595029914774,"user_tz":-240,"elapsed":841,"user":{"displayName":"mahmoud kharoof","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ggx1JGdWwdkYuAeerh_1bne3eE6XiWE4UkckTU3IQ=s64","userId":"04175753233013773418"}},"outputId":"1d1cba08-941f-40b3-d210-985f1c43b7c4"},"source":["y_pred = ann.predict(X_test)\n","np.set_printoptions(precision=2)\n","np.concatenate((y_pred.reshape(len(y_pred),1),y_test.reshape(len(y_test),1)),1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[431.61, 431.23],\n","       [462.84, 460.01],\n","       [466.42, 461.14],\n","       ...,\n","       [473.55, 473.26],\n","       [440.44, 438.  ],\n","       [459.62, 463.28]])"]},"metadata":{"tags":[]},"execution_count":12}]}]}
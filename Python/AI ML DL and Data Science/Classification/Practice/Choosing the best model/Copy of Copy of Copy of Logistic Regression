{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Copy of Copy of Logistic Regression","provenance":[{"file_id":"1EBtaT0q_yHlfP8JrUdUcEKwD7J48_5Ya","timestamp":1594152122058}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Q8X8xDwS6vgS"},"source":["# Logistic Regression"]},{"cell_type":"markdown","metadata":{"id":"PEGG4I6n60cM"},"source":["## Importing the libraries"]},{"cell_type":"code","metadata":{"id":"AieDPuprkP3x"},"source":["import pandas as pd\r\n","import numpy as np\r\n","import matplotlib.pyplot as plt"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Aa536pRY7Eq5"},"source":["## Importing the dataset"]},{"cell_type":"code","metadata":{"id":"09gKf8o3kb2Z"},"source":["dataset = pd.read_csv(\"breast_cancer.csv\")\r\n","X = dataset.iloc[:, 1:-1].values\r\n","y = dataset.iloc[:, -1].values"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0AnzJQCj7TLO"},"source":["## Splitting the dataset into the Training set and Test set"]},{"cell_type":"code","metadata":{"id":"kpXbGvMXkwLI"},"source":["from sklearn.model_selection import train_test_split\r\n","\r\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pS1Q-n_A7iZ_"},"source":["## Training the Logistic Regression model on the Training set"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZdAzjCzVlBTQ","executionInfo":{"status":"ok","timestamp":1609029479256,"user_tz":-240,"elapsed":1058,"user":{"displayName":"mahmoud kharoof","photoUrl":"https://lh6.googleusercontent.com/-oJjhO6LTv0k/AAAAAAAAAAI/AAAAAAAAPxA/3js0ERV5mco/s64/photo.jpg","userId":"04175753233013773418"}},"outputId":"7ffe942e-e6b7-4603-d06f-2625fea3ffe8"},"source":["from sklearn.linear_model import LogisticRegression\r\n","\r\n","classifier = LogisticRegression(random_state = 0)\r\n","\r\n","classifier.fit(X_train, y_train)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n","                   intercept_scaling=1, l1_ratio=None, max_iter=100,\n","                   multi_class='auto', n_jobs=None, penalty='l2',\n","                   random_state=0, solver='lbfgs', tol=0.0001, verbose=0,\n","                   warm_start=False)"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"4cgD7EnB8Dnd"},"source":["## Predicting the Test set results"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iNYRTMRClUjn","executionInfo":{"status":"ok","timestamp":1609029481458,"user_tz":-240,"elapsed":843,"user":{"displayName":"mahmoud kharoof","photoUrl":"https://lh6.googleusercontent.com/-oJjhO6LTv0k/AAAAAAAAAAI/AAAAAAAAPxA/3js0ERV5mco/s64/photo.jpg","userId":"04175753233013773418"}},"outputId":"9bcf5a07-04b8-4cde-9427-4b0c8cd63fd5"},"source":["y_pred = classifier.predict(X_test)\r\n","\r\n","print(np.concatenate((y_pred.reshape(len(y_pred), 1), y_test.reshape(len(y_test), 1)),1))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[[2 2]\n"," [2 2]\n"," [4 4]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [4 4]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [4 4]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [4 4]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [4 4]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [4 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [4 2]\n"," [4 4]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [4 4]\n"," [4 4]\n"," [2 4]\n"," [4 2]\n"," [4 4]\n"," [4 4]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 4]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [2 4]\n"," [2 2]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [4 4]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]\n"," [2 2]\n"," [4 4]\n"," [2 2]]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"26CHkZbs8Tu5"},"source":["## Making the Confusion Matrix"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hqWlgozwlqQ8","executionInfo":{"status":"ok","timestamp":1609029486616,"user_tz":-240,"elapsed":1060,"user":{"displayName":"mahmoud kharoof","photoUrl":"https://lh6.googleusercontent.com/-oJjhO6LTv0k/AAAAAAAAAAI/AAAAAAAAPxA/3js0ERV5mco/s64/photo.jpg","userId":"04175753233013773418"}},"outputId":"709b5a74-7a3e-4f6a-8060-c3fc944829ee"},"source":["from sklearn.metrics import confusion_matrix, accuracy_score\r\n","\r\n","print(confusion_matrix(y_test, y_pred))\r\n","print(accuracy_score(y_test, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[[84  3]\n"," [ 3 47]]\n","0.9562043795620438\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"kMErnLnu8hmb"},"source":["## Computing the accuracy with k-Fold Cross Validation"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GL3c3_n9l3yt","executionInfo":{"status":"ok","timestamp":1609029812624,"user_tz":-240,"elapsed":1122,"user":{"displayName":"mahmoud kharoof","photoUrl":"https://lh6.googleusercontent.com/-oJjhO6LTv0k/AAAAAAAAAAI/AAAAAAAAPxA/3js0ERV5mco/s64/photo.jpg","userId":"04175753233013773418"}},"outputId":"d90cbb20-5c75-489a-9321-08a205f2eb30"},"source":["from sklearn.model_selection import cross_val_score\r\n","\r\n","accuracies = cross_val_score(estimator = classifier, X = X_train, y = y_train, cv = 10)\r\n","print(\"Accuracy: {:.2f} %\".format(accuracies.mean()*100))\r\n","print(\"Standard deviation: {:.2f} %\".format(accuracies.std()*100))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Accuracy: 96.70 %\n","Standard deviation: 1.97 %\n"],"name":"stdout"}]}]}
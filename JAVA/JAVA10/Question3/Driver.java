package SoftwareDesign.LAB8.Question3;

public class Driver {
    public static void main(String[] args) {

        TCP_Client1 tcp_client1 = new TCP_Client1("192.168.0.132", 65001);
        while (true) {
            if(tcp_client1.isStab())
            {
                System.out.println("you stabbed");
                tcp_client1.setStab(false);
            }

            if(tcp_client1.isShoot())
            {
                System.out.println("you shot");
                tcp_client1.setShoot(false);
            }

            if(tcp_client1.isHide())
            {
                System.out.println("you hid");
                tcp_client1.setHide(false);
            }
        }
       /* System.out.println("Simon says place the phone on the right side");
        System.out.println("You have five seconds");
        try {
            Thread.sleep(5000);
        } catch (InterruptedException e) {
            e.getStackTrace();
        }

        if (tcp_client1.x < -1) { // This one is a noticable movement
            System.out.println("You have won this round");
        } else {
            System.out.println("You have lost this round");
        }
        System.out.println("Simon says place the phone on the left side");
        System.out.println("You have five seconds");
        try {
            Thread.sleep(5000);
        } catch (InterruptedException e) {
            e.getStackTrace();
        }

        if (tcp_client1.x > 1) { // This one is a noticable movement
            System.out.println("You have won this round");
        } else {
            System.out.println("You have lost this round");
        }

        System.out.println("Place the phone on the right side");
        System.out.println("You have five seconds");
        try {
            Thread.sleep(5000);
        } catch (InterruptedException e) {
            e.getStackTrace();
        }
        if (tcp_client1.y > -0.1 && tcp_client1.y < 0.1) { // The y is the speed so we put it small because of the error generated by the sensor of the phone not being totally in
            // rest mode
            System.out.println("You have won this round");
        } else {
            System.out.println("You have lost this round");
        }

        System.exit(1);
    }*/
    }
}
